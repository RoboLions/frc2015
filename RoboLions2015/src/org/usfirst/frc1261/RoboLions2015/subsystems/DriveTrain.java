// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc1261.RoboLions2015.subsystems;

import org.usfirst.frc1261.RoboLions2015.RobotMap;
import org.usfirst.frc1261.RoboLions2015.commands.*;
import edu.wpi.first.wpilibj.*;

import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class DriveTrain extends Subsystem {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    Encoder leftEncoder = RobotMap.driveTrainLeftEncoder;
    Encoder rightEncoder = RobotMap.driveTrainRightEncoder;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    CANTalon rightFrontDrive = RobotMap.driveTrainrightFrontDrive;
    CANTalon rightBackDrive = RobotMap.driveTrainrightBackDrive;
    CANTalon leftBackDrive = RobotMap.driveTrainleftBackDrive;
    CANTalon leftFrontDrive = RobotMap.driveTrainleftFrontDrive;
    RobotDrive robotDrive = RobotMap.driveTrainrobotDrive;
    
    
    // Put methods for controlling this subsystem
    // here. Call these from Commands.
    
    public RobotDrive getRobotDrive() {
    	return robotDrive;
    }
    
    public double pulsesTraveled() {
    	return (rightEncoder.get() + leftEncoder.get()) / 2;
    }
    
    public double distanceTraveled() {
    	return (leftEncoder.getDistance() + rightEncoder.getDistance()) / 2;
//    	return (rightEncoder.get()/360.0*Math.PI*6.0 - leftEncoder.get()/360.0*Math.PI*6.0)/24;
    }
    
    public Encoder getLeftEncoder() {
    	return leftEncoder;
    }
    
    public Encoder getRightEncoder() {
    	return rightEncoder;
    }
    
    public void resetDistance() {
    	leftEncoder.reset();
    	rightEncoder.reset();
    }
    
    public SpeedController getLeftDrive() {
    	return leftFrontDrive;
    }
    
    public SpeedController getRightDrive() {
    	return rightFrontDrive;
    }
    
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
        setDefaultCommand(new DriveWithJoysticks());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	
        // Set the default command for a subsystem here.
        //setDefaultCommand(new MySpecialCommand());
    }
    
}

